{"version":3,"sources":["components/PlayerBaseInfo.js","components/SeasonAverages.js","components/Player.js","components/Calender.js","components/ScoreCard.js","components/Game.js","App.js","index.js"],"names":["PlayerBaseInfo","playerData","player","removePlayerFromList","className","undefined","fName","first_name","lName","last_name","imgUrl","fullName","src","alt","height","width","renderPlayerImg","info","position","renderPosition","team","abbreviation","renderTeam","onClick","id","season","averages","SeasonAverages","Fragment","seasonAverages","isNaN","parseInt","renderSeason","parseFloat","games_played","toFixed","renderGamesPlayed","min","renderMinutes","pts","renderPoints","reb","renderRebounds","ast","renderAssists","stl","renderSteals","blk","renderBlocks","turnover","renderTurnovers","fgm","renderFieldGoalMade","fga","renderFieldGoalAttempts","fg_pct","renderFieldGoalPct","fg3m","renderThreePointMade","fg3a","renderThreePointAttempts","fg3_pct","renderThreePointPct","ftm","renderFreethrowMade","fta","renderFreethrowAttempts","ft_pct","renderFreethrowPct","Player","props","handleSubmit","e","preventDefault","names","target","value","console","log","getPlayerInformation","handleChange","event","replace","length","setState","playerName","handleSelect","year","state","axios","get","then","a","res","data","newPlayerId","checkPlayerExistenceInList","newPlayerInfo","getPlayerSeasonAverages","alert","addPlayerToList","catch","err","playerExists","activePlayersList","find","stats","playerId","playerInfo","newPlayersList","newPlayerList","filter","searchedPlayers","onSubmit","this","required","type","autoComplete","onChange","placeholder","name","map","Component","Calender","getSelectedDate","today","Date","useState","selectedDate","setSelectedDate","handleSelectedDate","date","useEffect","selected","dateFormat","minDate","showYearDropdown","scrollableMonthYearDropdown","ScoreCard","game","gameInfo","renderGameDate","renderScore","isHome","period","home_team_score","visitor_team_score","renderTeamName","home_team","visitor_team","renderLogo","classes","toggleScoreClass","status","is","postseason","renderPostSeason","time","Game","getGames","selectDate","gameInfos","newDate","formatDate","getGameTime","timeFloatAry","split","getFormattedDay","day","getWeekDay","full","weekdayAry","getMonthDay","month","getFormattedMonth","getFullYear","getMonth","getDate","updatedDate","gameDate","getDay","renderFullDate","interval","setInterval","now","clearInterval","sort","b","App","hideComponent","showHidePlayer","showHideGame","toggleBtn","showHideTeam","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.409ff6b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerBaseInfo({ player, removePlayerFromList }) {\r\n  function renderPlayerImg(playerData) {\r\n    if (playerData === null || playerData === undefined) return \"-\";\r\n\r\n    let fName = playerData.first_name;\r\n    let lName = playerData.last_name;\r\n    let imgUrl = `https://nba-players.herokuapp.com/players/${lName}/${fName}`;\r\n\r\n    let fullName = `${fName} ${lName} image`;\r\n\r\n    return <img src={imgUrl} alt={fullName} height=\"75px\" width=\"100px\" />;\r\n  }\r\n\r\n  function renderName(playerData) {\r\n    if (playerData === null || playerData === undefined) return \"-\";\r\n    else {\r\n      return playerData.first_name + \" \" + playerData.last_name;\r\n    }\r\n  }\r\n\r\n  function renderPosition(playerData) {\r\n    if (playerData === null || playerData === undefined) return \"-\";\r\n    if (playerData.position === undefined) return null;\r\n    return playerData.position;\r\n  }\r\n\r\n  function renderTeam(playerData) {\r\n    if (playerData === null || playerData === undefined) return \"-\";\r\n    if (playerData.team === undefined) return null;\r\n    return playerData.team.abbreviation;\r\n  }\r\n\r\n  function handleCloseButton(id, season) {\r\n    removePlayerFromList(id, season);\r\n  }\r\n\r\n  return (\r\n    <div className=\"player-information-container spaced-row\">\r\n      <div className=\"player-border\">\r\n        {renderPlayerImg(player.info)}\r\n        <h4 className=\"player-name-text\">{renderName(player.info)}</h4>\r\n        <span>\r\n          <h5 className=\"player-information-text\">\r\n            Position: {renderPosition(player.info)} | Team:{\" \"}\r\n            {renderTeam(player.info)}\r\n          </h5>\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"nba-close-btn\"\r\n          onClick={() => handleCloseButton(player.id, player.averages.season)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerBaseInfo;\r\n","import React from \"react\";\r\n\r\nfunction SeasonAverages({ player }) {\r\n  function renderSeason(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseInt(seasonAverages.season))) return \"-\";\r\n\r\n    return (\r\n      seasonAverages.season + \" - \" + (parseInt(seasonAverages.season) + 1)\r\n    );\r\n  }\r\n\r\n  function renderGamesPlayed(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.games_played))) return \"-\";\r\n\r\n    return seasonAverages.games_played.toFixed(0);\r\n  }\r\n\r\n  function renderMinutes(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.min))) return \"-\";\r\n\r\n    return seasonAverages.min;\r\n  }\r\n\r\n  function renderPoints(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.pts))) return \"-\";\r\n\r\n    return (seasonAverages.pts * 1).toFixed(1);\r\n  }\r\n\r\n  function renderRebounds(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.reb))) return \"-\";\r\n\r\n    return (seasonAverages.reb * 1).toFixed(1);\r\n  }\r\n\r\n  function renderAssists(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.ast))) return \"-\";\r\n\r\n    return (seasonAverages.ast * 1).toFixed(1);\r\n  }\r\n\r\n  function renderSteals(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.stl))) return \"-\";\r\n\r\n    return (seasonAverages.stl * 1).toFixed(1);\r\n  }\r\n\r\n  function renderBlocks(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.blk))) return \"-\";\r\n\r\n    return (seasonAverages.blk * 1).toFixed(1);\r\n  }\r\n\r\n  function renderTurnovers(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.turnover))) return \"-\";\r\n\r\n    return (seasonAverages.turnover * 1).toFixed(1);\r\n  }\r\n\r\n  function renderFreethrowMade(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.ftm))) return \"-\";\r\n\r\n    return seasonAverages.ftm.toFixed(1);\r\n  }\r\n\r\n  function renderFreethrowAttempts(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fta))) return \"-\";\r\n\r\n    return seasonAverages.fta.toFixed(1);\r\n  }\r\n\r\n  function renderFreethrowPct(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.ft_pct))) return \"-\";\r\n\r\n    return (seasonAverages.ft_pct * 100).toFixed(1);\r\n  }\r\n\r\n  function renderFieldGoalMade(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fgm))) return \"-\";\r\n\r\n    return seasonAverages.fgm.toFixed(1);\r\n  }\r\n\r\n  function renderFieldGoalAttempts(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fga))) return \"-\";\r\n\r\n    return seasonAverages.fga.toFixed(1);\r\n  }\r\n\r\n  function renderFieldGoalPct(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fg_pct))) return \"-\";\r\n\r\n    return (seasonAverages.fg_pct * 100).toFixed(1);\r\n  }\r\n\r\n  function renderThreePointMade(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fg3m))) return \"-\";\r\n\r\n    return seasonAverages.fg3m.toFixed(1);\r\n  }\r\n\r\n  function renderThreePointAttempts(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fg3a))) return \"-\";\r\n\r\n    return seasonAverages.fg3a.toFixed(1);\r\n  }\r\n\r\n  function renderThreePointPct(seasonAverages) {\r\n    if (seasonAverages === null || seasonAverages === undefined) return;\r\n    if (isNaN(parseFloat(seasonAverages.fg3_pct))) return \"-\";\r\n\r\n    return (seasonAverages.fg3_pct * 100).toFixed(1);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">SEASON</h5>\r\n        {renderSeason(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">GP</h5>{\" \"}\r\n        {renderGamesPlayed(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">MPG</h5>{\" \"}\r\n        {renderMinutes(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">PPG</h5>{\" \"}\r\n        {renderPoints(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">RPG</h5>{\" \"}\r\n        {renderRebounds(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        {\" \"}\r\n        <h5 className=\"basic-averages-header\">APG</h5>{\" \"}\r\n        {renderAssists(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        {\" \"}\r\n        <h5 className=\"basic-averages-header\">SPG</h5>{\" \"}\r\n        {renderSteals(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">BPG</h5>{\" \"}\r\n        {renderBlocks(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">TOs</h5>{\" \"}\r\n        {renderTurnovers(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FGM</h5>{\" \"}\r\n        {renderFieldGoalMade(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FGA</h5>{\" \"}\r\n        {renderFieldGoalAttempts(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FG%</h5>{\" \"}\r\n        {renderFieldGoalPct(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        {\" \"}\r\n        <h5 className=\"basic-averages-header\">3PTM</h5>{\" \"}\r\n        {renderThreePointMade(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        {\" \"}\r\n        <h5 className=\"basic-averages-header\">3PTA</h5>{\" \"}\r\n        {renderThreePointAttempts(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        {\" \"}\r\n        <h5 className=\"basic-averages-header\">3PT%</h5>{\" \"}\r\n        {renderThreePointPct(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FTM</h5>{\" \"}\r\n        {renderFreethrowMade(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FTA</h5>{\" \"}\r\n        {renderFreethrowAttempts(player.averages)}\r\n      </div>\r\n      <div className=\"stat-container\">\r\n        <h5 className=\"basic-averages-header\">FT%</h5>{\" \"}\r\n        {renderFreethrowPct(player.averages)}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SeasonAverages;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlayerBaseInfo from \"./PlayerBaseInfo\";\r\nimport SeasonAverages from \"./SeasonAverages\";\r\n\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchedPlayers: [],\r\n      playerName: null,\r\n      season: \"2020\",\r\n      activePlayersList: [],\r\n    };\r\n  }\r\n\r\n  // gets player id when form is submitted\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const names = e.target[0].value;\r\n    console.log(names);\r\n    this.getPlayerInformation();\r\n    e.target[0].value = null;\r\n  };\r\n\r\n  // handles player name via input\r\n  handleChange = (event) => {\r\n    const replace = event.target.value;\r\n    if (replace.length > 0) {\r\n      this.setState({ playerName: replace });\r\n    }\r\n  };\r\n\r\n  // handles player season via dropdown\r\n  handleSelect = (event) => {\r\n    const year = event.target.value;\r\n    this.setState({ season: year });\r\n    console.log(year + \" State Year: \" + this.state.season);\r\n  };\r\n\r\n  getPlayerInformation = () => {\r\n    axios\r\n      .get(\r\n        `https://www.balldontlie.io/api/v1/players?search=${this.state.playerName}`\r\n      )\r\n      .then(async (res) => {\r\n        // get all neccessary player data\r\n        let data = res.data.data;\r\n        let newPlayerId = res.data.data[0].id;\r\n        if (this.checkPlayerExistenceInList(newPlayerId)) return;\r\n        let newPlayerInfo = res.data.data[0];\r\n        await this.getPlayerSeasonAverages(newPlayerId)\r\n          .then((res) => {\r\n            if (newPlayerInfo === undefined) {\r\n              alert(\r\n                `This player did not exist during the ${this.state.season} season!`\r\n              );\r\n            } else if (data.length > 1) {\r\n              alert(\"Please specify the name more!\");\r\n            } else {\r\n              if (res === null) return;\r\n\r\n              return this.addPlayerToList(newPlayerId, newPlayerInfo, res);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        return alert(\r\n          `This player did not exist during the ${this.state.season} season!`\r\n        );\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  checkPlayerExistenceInList = (id) => {\r\n    let playerExists = false;\r\n    this.state.activePlayersList.find((player) => {\r\n      if (player.id === id && \"\" + player.stats.season === this.state.season) {\r\n        playerExists = true;\r\n      }\r\n    });\r\n    if (playerExists) return true;\r\n    return false;\r\n  };\r\n\r\n  getPlayerSeasonAverages = (playerId) => {\r\n    return axios\r\n      .get(\r\n        `https://www.balldontlie.io/api/v1/season_averages?season=${this.state.season}&player_ids[]=${playerId}&postseason=false`\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data.data[0]);\r\n        if (res.data.data[0].season === undefined) return;\r\n        else {\r\n          return res.data.data[0];\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\r\n          `${this.state.playerName} was not active during the ${this.state.season} season`\r\n        );\r\n        return null;\r\n      });\r\n  };\r\n\r\n  addPlayerToList = (playerId, playerInfo, seasonAverages) => {\r\n    // filter out duplicates\r\n    const newPlayersList = [...this.state.activePlayersList];\r\n    this.setState({\r\n      activePlayersList: [\r\n        ...newPlayersList,\r\n        { id: playerId, info: playerInfo, averages: seasonAverages },\r\n      ],\r\n    });\r\n  };\r\n\r\n  removePlayerFromList = (id, season) => {\r\n    const newPlayerList = [...this.state.activePlayersList].filter(\r\n      (player) => player.id !== id\r\n    );\r\n\r\n    this.setState({ activePlayersList: newPlayerList });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nba-center\">\r\n        <form className=\"nba-form\" onSubmit={this.handleSubmit}>\r\n          <span>\r\n            <div className=\"nba-header\">Compare Player Stats</div>\r\n            <input\r\n              className=\"nba-input\"\r\n              required\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter Player Name...\"\r\n              name=\"player\"\r\n              id=\"player\"\r\n            ></input>\r\n            <button className=\"nba-btn\">Submit</button>\r\n          </span>\r\n        </form>\r\n\r\n        <div className=\"player-container\">\r\n          {this.state.activePlayersList.map((player) => {\r\n            return (\r\n              <React.Fragment>\r\n                {console.log(player)}\r\n                <PlayerBaseInfo\r\n                  key={player.id}\r\n                  player={player}\r\n                  removePlayerFromList={this.removePlayerFromList}\r\n                />\r\n                <div className=\"basic-stats\">\r\n                  <SeasonAverages key={player.id} player={player} />\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Calender({ getSelectedDate }) {\r\n  var today = new Date();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(today);\r\n\r\n  useEffect(() => {\r\n    handleSelectedDate(selectedDate);\r\n  }, []);\r\n\r\n  function handleSelectedDate(date) {\r\n    setSelectedDate(date);\r\n    getSelectedDate(date);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DatePicker\r\n        className=\"nba-input\"\r\n        selected={selectedDate}\r\n        dateFormat=\"yyyy-MM-dd\"\r\n        onChange={(date) => handleSelectedDate(date)}\r\n        minDate={new Date(\"1979-09-01\")}\r\n        showYearDropdown\r\n        scrollableMonthYearDropdown\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Calender;\r\n","import React from \"react\";\r\n\r\nfunction ScoreCard({ gameInfo, renderGameDate }) {\r\n  function renderScore(game, isHome) {\r\n    if (game.period === 0) return null;\r\n    else if (isHome) return game.home_team_score;\r\n    else return game.visitor_team_score;\r\n  }\r\n\r\n  function renderPostSeason(game) {\r\n    if (game.id === null || game.is === undefined) return null;\r\n    if (game.postseason) return \"Playoffs\";\r\n    return \"Regular\";\r\n  }\r\n\r\n  function renderTeamName(game, isHome) {\r\n    if (isHome) {\r\n      if (game.home_team === null || game.home_team === undefined) return null;\r\n      return game.home_team.name;\r\n    } else if (!isHome) {\r\n      if (game.visitor_team === null || game.visitor_team === undefined)\r\n        return null;\r\n      return game.visitor_team.name;\r\n    }\r\n  }\r\n\r\n  function renderLogo(game, isHome) {\r\n    let classes = \"team-logo \";\r\n    switch (renderTeamName(game, isHome)) {\r\n      case \"Hawks\":\r\n        return (classes += \"hawks\");\r\n      case \"Celtics\":\r\n        return (classes += \"celtics\");\r\n      case \"Nets\":\r\n        return (classes += \"nets\");\r\n      case \"Hornets\":\r\n        return (classes += \"hornets\");\r\n      case \"Bulls\":\r\n        return (classes += \"bulls\");\r\n      case \"Cavaliers\":\r\n        return (classes += \"cavaliers\");\r\n      case \"Mavericks\":\r\n        return (classes += \"mavericks\");\r\n      case \"Nuggets\":\r\n        return (classes += \"nuggets\");\r\n      case \"Pistons\":\r\n        return (classes += \"pistons\");\r\n      case \"Warriors\":\r\n        return (classes += \"warriors\");\r\n      case \"Rockets\":\r\n        return (classes += \"rockets\");\r\n      case \"Pacers\":\r\n        return (classes += \"pacers\");\r\n      case \"Clippers\":\r\n        return (classes += \"clippers\");\r\n      case \"Lakers\":\r\n        return (classes += \"lakers\");\r\n      case \"Grizzlies\":\r\n        return (classes += \"grizzlies\");\r\n      case \"Heat\":\r\n        return (classes += \"heat\");\r\n      case \"Bucks\":\r\n        return (classes += \"bucks\");\r\n      case \"Timberwolves\":\r\n        return (classes += \"timberwolves\");\r\n      case \"Pelicans\":\r\n        return (classes += \"pelicans\");\r\n      case \"Trail Blazers\":\r\n        return (classes += \"blazers\");\r\n      case \"Knicks\":\r\n        return (classes += \"knicks\");\r\n      case \"Thunder\":\r\n        return (classes += \"thunder\");\r\n      case \"Magic\":\r\n        return (classes += \"magic\");\r\n      case \"76ers\":\r\n        return (classes += \"sixers\");\r\n      case \"Suns\":\r\n        return (classes += \"suns\");\r\n      case \"Kings\":\r\n        return (classes += \"kings\");\r\n      case \"Spurs\":\r\n        return (classes += \"spurs\");\r\n      case \"Raptors\":\r\n        return (classes += \"raptors\");\r\n      case \"Jazz\":\r\n        return (classes += \"jazz\");\r\n      case \"Wizards\":\r\n        return (classes += \"wizards\");\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleRenderDate(game) {\r\n    return renderGameDate(game);\r\n  }\r\n\r\n  function toggleScoreClass(game, isHome) {\r\n    let classes = \"team-score \";\r\n    if (game.status === \"Final\") {\r\n      if (isHome && game.home_team_score > game.visitor_team_score) {\r\n        return (classes += \"green\");\r\n      } else if (isHome && game.home_team_score < game.visitor_team_score) {\r\n        return (classes += \"red\");\r\n      } else if (!isHome && game.home_team_score > game.visitor_team_score) {\r\n        return (classes += \"red\");\r\n      } else if (!isHome && game.home_team_score < game.visitor_team_score) {\r\n        return (classes += \"green\");\r\n      }\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-block\">\r\n      <div className=\"team-score-block\">\r\n        <div>\r\n          <div className={renderLogo(gameInfo, false)}></div>\r\n          <h2 className=\"team-name-text\">{renderTeamName(gameInfo, false)}</h2>\r\n        </div>\r\n        <div className={toggleScoreClass(gameInfo, false)}>\r\n          <h4>{renderScore(gameInfo, false)}</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"game-information\">\r\n        <div className=\"game-date\">{handleRenderDate(gameInfo)}</div>\r\n        <div className=\"game-status\">{gameInfo.status}</div>\r\n        <div>{renderPostSeason(gameInfo)}</div>\r\n        <div>{gameInfo.time}</div>\r\n      </div>\r\n      <div className=\"team-score-block\">\r\n        <div>\r\n          <div className={renderLogo(gameInfo, true)}></div>\r\n          <h2 className=\"team-name-text\">{renderTeamName(gameInfo, true)}</h2>\r\n        </div>\r\n        <div className={toggleScoreClass(gameInfo, true)}>\r\n          <h4>{renderScore(gameInfo, true)}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Calender from \"./Calender\";\r\nimport ScoreCard from \"./ScoreCard\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var today = new Date(),\r\n      date =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate();\r\n    this.state = {\r\n      gameInfos: [{}],\r\n      selectDate: date,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(\r\n      () => this.setState({ time: Date.now() }, () => this.getGames()),\r\n      60000\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getGames = () => {\r\n    axios\r\n      .get(\r\n        `https://www.balldontlie.io/api/v1/games?start_date=${this.state.selectDate}&end_date=${this.state.selectDate}`\r\n      )\r\n      .then(async (res) => {\r\n        console.log(res.data.data);\r\n        await this.setState({ gameInfos: res.data.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getSelectedDate = (selectedDate) => {\r\n    let newDate = this.formatDate(selectedDate);\r\n    this.setState({ selectDate: newDate }, () => this.getGames());\r\n  };\r\n\r\n  getGameTime = (game) => {\r\n    // game order doesnt matter if game in finished\r\n    if (game.status === \"Final\") return;\r\n\r\n    // game has started so use period to check most recent game\r\n    // display older games before recent games\r\n    if (game.period !== 0) return -parseInt(game.period);\r\n\r\n    // game has not started so status is in time format\r\n    let timeStringAry = (\"\" + game.status).split(\" \");\r\n    let timeFloatAry = timeStringAry[0].split(\":\");\r\n\r\n    let time = \"\" + timeFloatAry[0] + timeFloatAry[1];\r\n\r\n    return parseFloat(time);\r\n  };\r\n\r\n  getFormattedDay = (day) => {\r\n    if (day < 10) return \"\" + 0 + day;\r\n    return day;\r\n  };\r\n\r\n  getWeekDay = (day, full) => {\r\n    let weekdayAry = [\"Mon\", \"Tue\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\", \"Sun\"];\r\n    if (full) {\r\n      weekdayAry = [\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n        \"Sunday\",\r\n      ];\r\n    }\r\n\r\n    return weekdayAry[day];\r\n  };\r\n\r\n  getMonthDay = (month) => {\r\n    let monthAry = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"Novemeber\",\r\n      \"December\",\r\n    ];\r\n\r\n    return monthAry[month];\r\n  };\r\n\r\n  getFormattedMonth = (month) => {\r\n    if (month < 10) return \"\" + 0 + month;\r\n    return month;\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    return (\r\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n    );\r\n  };\r\n\r\n  renderGameDate = (game) => {\r\n    let newDate = \"\" + game.date;\r\n    let updatedDate = newDate.replace(/-/g, \"/\").replace(/T.+/, \"\");\r\n    let gameDate = new Date(updatedDate);\r\n\r\n    let date =\r\n      this.getWeekDay(gameDate.getDay(), false) +\r\n      \"., \" +\r\n      this.getFormattedDay(gameDate.getDate()) +\r\n      \"-\" +\r\n      this.getFormattedMonth(gameDate.getMonth() + 1);\r\n    return date;\r\n  };\r\n\r\n  renderFullDate = (game) => {\r\n    if (game === null || game === undefined) return;\r\n    let newDate = \"\" + game.date;\r\n    let updatedDate = newDate.replace(/-/g, \"/\").replace(/T.+/, \"\");\r\n    let gameDate = new Date(updatedDate);\r\n\r\n    let date =\r\n      this.getWeekDay(gameDate.getDay(), true) +\r\n      \", \" +\r\n      this.getMonthDay(gameDate.getMonth()) +\r\n      \" \" +\r\n      this.getFormattedDay(gameDate.getDate() + \" \" + gameDate.getFullYear());\r\n    return date;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nba-center\">\r\n        <form className=\"nba-form\" onSubmit={this.handleSubmit}>\r\n          <span>\r\n            <div className=\"nba-header\">Select a date</div>\r\n            <Calender getSelectedDate={this.getSelectedDate} />\r\n          </span>\r\n        </form>\r\n\r\n        <main className=\"games-today center\">\r\n          <h3 className=\"nba-header\">\r\n            {this.renderFullDate(this.state.gameInfos[0])}\r\n          </h3>\r\n          {this.state.gameInfos\r\n            .sort((a, b) =>\r\n              this.getGameTime(a) > this.getGameTime(b) ? 1 : -1\r\n            )\r\n            .map((gameInfo) => {\r\n              return (\r\n                <ScoreCard\r\n                  key={gameInfo.id}\r\n                  gameInfo={gameInfo}\r\n                  renderGameDate={this.renderGameDate}\r\n                />\r\n              );\r\n            })}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\nimport Player from \"./components/Player\";\nimport Game from \"./components/Game\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"React\",\n      showHidePlayer: false,\n      showHideTeam: false,\n      showHideGame: true,\n    };\n  }\n\n  hideComponent = (name) => {\n    if (name === \"showHidePlayer\") {\n      this.setState({\n        showHidePlayer: true,\n        showHideGame: false,\n      });\n    } else {\n      this.setState({\n        showHideGame: true,\n        showHidePlayer: false,\n      });\n    }\n  };\n\n  toggleBtn = (state) => {\n    let classes = \"nba-nav-btn \";\n    if (state === false) return classes;\n    return classes + \"selected\";\n  };\n\n  render() {\n    const { showHidePlayer, showHideTeam, showHideGame } = this.state;\n    return (\n      <div className=\"NBA-App\">\n        <nav className=\"nba-nav\">\n          <h3 className=\"nba-logo\">Basketball Score App</h3>\n          <div className=\"nba-nav-btns\">\n            <button\n              className={this.toggleBtn(this.state.showHideGame)}\n              onClick={() => this.hideComponent(\"showHideGame\")}\n            >\n              Games\n            </button>\n            <button\n              className={this.toggleBtn(this.state.showHidePlayer)}\n              onClick={() => this.hideComponent(\"showHidePlayer\")}\n            >\n              Players\n            </button>\n          </div>\n        </nav>\n\n        {showHideGame && <Game />}\n        {showHidePlayer && <Player />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}